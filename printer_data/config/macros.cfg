[force_move]
# Enable commands that force potentially unsafe movement
enable_force_move: True

[gcode_macro UNSAFE_GANTRY_UP]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z100 F600
  M84

[gcode_macro PID_TUNE]
gcode:
	{% set e_tune = params.TEMP|default(0)|int %}
    {% if e_tune > 110 %}
    {% set output = ["PID_CALIBRATE HEATER="] %} 
    {% set dummy = output.append("extruder TARGET=%.2f" % e_tune) %}
    {% else %}
    {% set output = ["PID_CALIBRATE HEATER="] %} 
    {% set dummy = output.append("heater_bed TARGET=%.2f" % e_tune) %}
    {% endif %}
    {output|join("")}

# [gcode_macro CLEAN_NOZZLE]
# variable_start_x: 144
# variable_start_y: 257
# variable_start_z: 2
# variable_wipe_dist: -40
# variable_wipe_qty: 10
# variable_wipe_spd: 200
# variable_raise_distance: 30

# gcode:
#  {% if "xyz" not in printer.toolhead.homed_axes %}
#    G28
#  {% endif %}
 
#  G90                                            ; absolute positioning
#  ## Move nozzle to start position
#  G1 X{start_x} Y{start_y} F6000
#  G1 Z{start_z} F1500

#  ## Wipe nozzle
#  {% for wipes in range(1, (wipe_qty + 1)) %}
#    G1 X{start_x + wipe_dist} F{wipe_spd * 60}
#    G1 X{start_x} F{wipe_spd * 60}
#  {% endfor %}

#  ## Raise nozzle
#  G1 Z{raise_distance}  

[gcode_macro SAVE_ZOFFSET]
gcode:
  Z_OFFSET_APPLY_PROBE

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro M109]
rename_existing: M209
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-5} MAXIMUM={s+5}   ; Wait for hotend temp (within 1 degree)
    {% endif %}    

